public interface ParserConstants
{
    int START_SYMBOL = 46;

    int FIRST_NON_TERMINAL    = 46;
    int FIRST_SEMANTIC_ACTION = 77;

    int[][] PARSER_TABLE =
    {
        { -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1,  1, -1, -1,  1, -1, -1,  1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1,  4, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1,  5, -1, -1,  8, -1, -1,  8, -1, -1,  8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1,  7, -1, -1, -1, -1, -1, -1,  6, -1, -1,  6, -1, -1,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1,  9, -1, -1, 12, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 21, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, 23, -1, 24, 29, -1, 23, 32, -1, 33, 23, 34, 38, -1, 43, -1, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, 25, -1, -1, -1, -1, 25, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, 31, -1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 40, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 40, -1, -1, -1, -1, 40 },
        { -1, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 45, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 50, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 50, -1, -1, -1, -1, 50 },
        { -1, -1, -1, 51, -1, 51, -1, 52, -1, -1, -1, -1, -1, -1, 51, -1, 51, -1, -1, -1, 51, 51, -1, 51, -1, 51, -1, -1, -1, -1, 51, -1, 51, 53, 54, 55, 56, 57, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 60, -1, -1, -1, -1, -1, 60, -1, -1, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 59, -1, -1, -1, -1, 60 },
        { -1, -1, -1, 64, -1, 64, -1, 64, -1, -1, -1, -1, -1, -1, 64, -1, 64, -1, -1, -1, 64, 64, -1, 64, -1, 64, -1, -1, -1, -1, 64, -1, 64, 64, 64, 64, 64, 64, 61, 62, 63, -1, -1, -1, -1 },
        { -1, -1, 65, -1, -1, -1, -1, -1, 65, -1, -1, -1, -1, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65 },
        { -1, -1, -1, 66, -1, 66, -1, 66, -1, -1, -1, -1, -1, -1, 66, -1, 66, -1, -1, -1, 66, 66, -1, 66, -1, 66, -1, -1, -1, -1, 66, -1, 66, 66, 66, 66, 66, 66, 66, 66, 66, 67, 68, 69, -1 },
        { -1, -1, 73, -1, -1, -1, -1, -1, 70, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 72 }
    };

    int[][] PRODUCTIONS = 
    {
        {  2,  3,  4, 47,  5 },
        { 50, 52, 55, 57 },
        {  3, 49 },
        {  0 },
        {  6,  3, 49 },
        {  7,  3,  8,  9,  4, 51 },
        {  0 },
        {  3,  8,  9,  4, 51 },
        {  0 },
        { 10, 48, 11, 54,  4, 53 },
        {  0 },
        { 48, 11, 54,  4, 53 },
        {  0 },
        { 12 },
        { 13,  3, 56,  4, 47,  4, 55 },
        {  0 },
        {  0 },
        { 14, 48, 11, 12, 15 },
        { 16, 59, 58, 17 },
        {  0 },
        {  4, 59, 58 },
        {  3, 18, 70 },
        { 57 },
        {  0 },
        { 19,  3, 60 },
        {  0 },
        { 14, 70, 61, 15 },
        {  0 },
        {  6, 70, 61 },
        { 20, 70, 21, 59, 62 },
        {  0 },
        { 22, 59 },
        { 23, 70, 24, 59 },
        { 25, 59, 26, 70 },
        { 27, 14, 63, 64, 15 },
        {  3 },
        {  0 },
        {  6, 63, 64 },
        { 28, 14, 65, 66, 15 },
        { 29 },
        { 70 },
        {  0 },
        {  6, 65, 66 },
        { 30, 70, 31, 67, 17 },
        {  9, 68, 11, 59, 69 },
        {  6,  9, 68 },
        {  0 },
        {  0 },
        {  4, 67 },
        { 32,  3, 18, 70, 33, 70, 24, 59 },
        { 72, 71 },
        {  0 },
        {  8, 72 },
        { 34, 72 },
        { 35, 72 },
        { 36, 72 },
        { 37, 72 },
        { 38, 72 },
        { 39, 74, 73 },
        { 40, 74, 73 },
        { 74, 73 },
        { 39, 74, 73 },
        { 40, 74, 73 },
        { 41, 74, 73 },
        {  0 },
        { 76, 75 },
        {  0 },
        { 42, 76, 75 },
        { 43, 76, 75 },
        { 44, 76, 75 },
        {  9 },
        { 14, 70, 15 },
        { 45, 76 },
        { 63 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado \"PROGRAM\"",
        "Era esperado IDENT",
        "Era esperado \";\"",
        "Era esperado \".\"",
        "Era esperado \",\"",
        "Era esperado \"CONST\"",
        "Era esperado \"=\"",
        "Era esperado INTEIRO",
        "Era esperado \"VAR\"",
        "Era esperado \":\"",
        "Era esperado \"INTEGER\"",
        "Era esperado \"PROCEDURE\"",
        "Era esperado \"(\"",
        "Era esperado \")\"",
        "Era esperado \"BEGIN\"",
        "Era esperado \"END\"",
        "Era esperado \":=\"",
        "Era esperado \"CALL\"",
        "Era esperado \"IF\"",
        "Era esperado \"THEN\"",
        "Era esperado \"ELSE\"",
        "Era esperado \"WHILE\"",
        "Era esperado \"DO\"",
        "Era esperado \"REPEAT\"",
        "Era esperado \"UNTIL\"",
        "Era esperado \"READLN\"",
        "Era esperado \"WRITELN\"",
        "Era esperado LITERAL",
        "Era esperado \"CASE\"",
        "Era esperado \"OF\"",
        "Era esperado \"FOR\"",
        "Era esperado \"TO\"",
        "Era esperado \"<\"",
        "Era esperado \">\"",
        "Era esperado \">=\"",
        "Era esperado \"<=\"",
        "Era esperado \"<>\"",
        "Era esperado \"+\"",
        "Era esperado \"-\"",
        "Era esperado \"OR\"",
        "Era esperado \"*\"",
        "Era esperado \"/\"",
        "Era esperado \"AND\"",
        "Era esperado \"NOT\"",
        "<PROGRAMA> inválido",
        "<BLOCO> inválido",
        "<LID> inválido",
        "<REPIDENT> inválido",
        "<DCLCONST> inválido",
        "<LDCONST> inválido",
        "<DCLVAR> inválido",
        "<LDVAR> inválido",
        "<TIPO> inválido",
        "<DCLPROC> inválido",
        "<DEFPAR> inválido",
        "<CORPO> inválido",
        "<REPCOMANDO> inválido",
        "<COMANDO> inválido",
        "<PARAMETROS> inválido",
        "<REPPAR> inválido",
        "<ELSEPARTE> inválido",
        "<VARIAVEL> inválido",
        "<REPVARIAVEL> inválido",
        "<ITEMSAIDA> inválido",
        "<REPITEM> inválido",
        "<CONDCASE> inválido",
        "<RPINTEIRO> inválido",
        "<CONTCASE> inválido",
        "<EXPRESSAO> inválido",
        "<REPEXPSIMP> inválido",
        "<EXPSIMP> inválido",
        "<REPEXP> inválido",
        "<TERMO> inválido",
        "<REPTERMO> inválido",
        "<FATOR> inválido"
    };
}
